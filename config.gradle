import static org.gradle.api.Project.*

ext {
//---------------------------------------- keystore & IDE -----------------------------------------
    buildToolsVer = '27.0.1'
    minVer = 19
    targetVer = 26

    pwd = "panda931020"
    alias = "love_u"


//----------------------------------------classpath & plugs-----------------------------------------
    gradleVer = '3.1.0-alpha07'
    gradlePlug = "com.android.tools.build:gradle:$gradleVer"

    kotlinVer = '1.2.0'
    kotlin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVer"
    kotlinPlug = "kotlin-android"

    realmVer = '4.3.1'
    realm = "io.realm:realm-gradle-plugin:$realmVer"
    realmPlug = "realm-android"

//---------------------------------------------support----------------------------------------------
    supportPackage = 'com.android.support'
    supportVersion = '26.1.0'    //   android support
    sup = [
            design      : buildDepend(supportPackage, 'design', supportVersion),
            recyclerView: buildDepend(supportPackage, 'recyclerview-v7', supportVersion),
            cardView    : buildDepend(supportPackage, 'cardview-v7', supportVersion),
            appCompat   : buildDepend(supportPackage, 'appcompat-v7', supportVersion)
    ]
//--------------------------------------------Http Engine-------------------------------------------
    retrofitPackage = 'com.squareup.retrofit2'
    retrofitVersion = '2.3.0'
    retrofit = [
            core         : buildDepend(retrofitPackage, 'retrofit', retrofitVersion),
            gson         : buildDepend(retrofitPackage, 'converter-gson', retrofitVersion),
            rxAdapterJava: buildDepend(retrofitPackage, 'adapter-rxjava2', retrofitVersion)
    ]

//---------------------------------------------Rx --------------------------------------------------
    reactivePackage = 'io.reactivex.rxjava2'
    //rx
    rxAndroidVersion = '2.0.1'
    rxJavaVersion = '2.1.7'
    rxLifeCycleVersion = '2.2.1'
    rxBindVersion = '2.0.0'
    rxPermissionVersion = '0.9.4'

    rx = [
            android     : buildDepend(reactivePackage, 'rxandroid', rxAndroidVersion),
            java        : buildDepend(reactivePackage, 'rxjava', rxJavaVersion),
            life        : "com.trello.rxlifecycle2:rxlifecycle:$rxLifeCycleVersion",
            lifeAndroid : "com.trello.rxlifecycle2:rxlifecycle-android:$rxLifeCycleVersion",
            lifeCmp     : "com.trello.rxlifecycle2:rxlifecycle-components:$rxLifeCycleVersion",
            permission  : "com.tbruyelle.rxpermissions2:rxpermissions:${rxPermissionVersion}@aar",
            binding     : "com.jakewharton.rxbinding2:rxbinding:$rxBindVersion",
            bindSup     : "com.jakewharton.rxbinding2:rxbinding-support-v4:$rxBindVersion",
            bindCompat  : "com.jakewharton.rxbinding2:rxbinding-appcompat-v7:$rxBindVersion",
            bindDesign  : "com.jakewharton.rxbinding2:rxbinding-design:$rxBindVersion",
            bindRecycler: "com.jakewharton.rxbinding2:rxbinding-recyclerview-v7:$rxBindVersion",
            bindLean    : "com.jakewharton.rxbinding2:rxbinding-leanback-v17:$rxBindVersion"

    ]

//---------------------------------------------IOC--------------------------------------------------
    butterKnifeVersion = '8.8.1'
    knife = "com.jakewharton:butterknife:$butterKnifeVersion"
    knifeAPT = "com.jakewharton:butterknife-compiler:$butterKnifeVersion"

//--------------------------------------------Image Engine------------------------------------------
    glideVersion = '4.3.1'
    circleImageVersion = '1.3.0'

    glidePackage = 'com.github.bumptech.glide'
    hdodenhofPackage = 'de.hdodenhof'

    glide = buildDepend(glidePackage, 'glide', glideVersion)
    glideAPT = buildDepend(glidePackage, 'compiler', glideVersion)
    circleImageView = buildDepend(hdodenhofPackage, 'circleimageview', circleImageVersion)
    photoView = 'com.github.chrisbanes:PhotoView:2.0.0'
//-----------------------------------------awesome 3rd lib-------------------------------------------
    recyclerAdapter = 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.19'

    leakcanaryVer = '1.5.4'
    leakcanary = [
            release: "com.squareup.leakcanary:leakcanary-android-no-op:$leakcanaryVer",
            debug  : "com.squareup.leakcanary:leakcanary-android:$leakcanaryVer",
            test   : "com.squareup.leakcanary:leakcanary-android-no-op:$leakcanaryVer",
    ]

//
// ----------------------------------------------三方SDK---------------------------------------------
    jcoreVer = '1.1.3'
    jpushVer = '3.0.6'
    jpush = [
            core: "cn.jiguang.sdk:jcore:$jcoreVer",
            push: "cn.jiguang.sdk:jpush:$jpushVer"
    ]
    umengVer = '6.1.2'
    umeng = "com.umeng.analytics:analytics:$umengVer"

    aMapVer = 'latest.integration'
    aMap = [
            map3d   : "com.amap.api:3dmap:$aMapVer",
            map2d   : "com.amap.api:2dmap:$aMapVer",
            navi    : "com.amap.api:navi-3dmap:$aMapVer",
            location: "com.amap.api:location:$aMapVer",
            search  : "com.amap.api:search:$aMapVer"

    ]

//---------------------------------------------Test-------------------------------------------------
    //Test
    junitVersion = '4.12'
    mockitoVersion = '1.10.19'
    robolectricVersion = '3.0'
    junitPackage = 'junit'
    mockitoPackage = 'org.mockito'
    robolectricPackage = 'org.robolectric'

    testDp = [
            junit      : buildDepend(junitPackage, 'junit', junitVersion),
            mockito    : buildDepend(mockitoPackage, 'mockito-core', mockitoVersion),
            robolectric: buildDepend(robolectricPackage, 'robolectric', robolectricVersion),
    ]
}

static String buildDepend(String pack, String dependency, String version) {
    return "${pack}:${dependency}:${version}"
}
